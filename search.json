[{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 hpa.spatial authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/articles/mapping-data.html","id":"the-problem","dir":"Articles","previous_headings":"","what":"The problem","title":"Mapping data across geographies","text":"task often comes working spatial data move data across geographies presentation. Aggregating SA2s SA3s can straight forward, mapping data partially (completely) overlapping geographies can trickier. example, SA2s wholly contained within single local hospital network (LHN). cases, may want take couple different approaches moving data SA2 LHN presenting data. also happens editions ASGS, say 2011 2016 edition SA2s.","code":""},{"path":[]},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/articles/mapping-data.html","id":"solution-1-map-data-from-one-geography-to-another-based-on-population","dir":"Articles","previous_headings":"The solutions","what":"Solution 1: Map data from one geography to another based on population","title":"Mapping data across geographies","text":"Australian Bureau Statistics (ABS) release correspondence tables allow user estimate proportion cross pair geographies (based residential population). helpful mapping geographies release editions . example, 2011 2016 edition SA2s. SA2 codes 2011 split one SA2 code 2016 edition. map_data_with_correspondence() uses correspondence tables map values one geography another. can used map rows data (using ratio probability assignment new area). example, pass two values code map_data_with_correspondence() ask map 2016 edition, (may) distributed across different geographies. considers code-value pair single unit allocated new geography specified value_type argument. However, code-value pairs aggregate values (.e. number car crashes SA2), preferable split aggregate new geographies. happens pass “aggregate” values value_type = \"aggs\"","code":"sa2_cg <- get_correspondence_tbl(   from_area = \"sa2\",   from_year = 2011,   to_area = \"sa2\",   to_year = 2016 )  sa2_cg #> # A tibble: 2,426 × 3 #>    SA2_MAINCODE_2011 SA2_MAINCODE_2016 ratio #>    <chr>             <chr>             <dbl> #>  1 101011001         101051539             1 #>  2 101011002         101051540             1 #>  3 101011003         101061541             1 #>  4 101011004         101061542             1 #>  5 101011005         101061543             1 #>  6 101011006         101061544             1 #>  7 101021007         101021007             1 #>  8 101021008         101021008             1 #>  9 101021009         101021009             1 #> 10 101021010         101021010             1 #> # ℹ 2,416 more rows sa2_cg |> filter(ratio != 1) #> # A tibble: 461 × 3 #>    SA2_MAINCODE_2011 SA2_MAINCODE_2016   ratio #>    <chr>             <chr>               <dbl> #>  1 102021047         102021047         0.993   #>  2 102021047         102021055         0.00658 #>  3 104011082         104011082         1.00    #>  4 107011130         107011545         0.482   #>  5 107011130         107011546         0.362   #>  6 107011130         107011547         0.157   #>  7 107041144         107041144         1.00    #>  8 107041149         107041548         0.449   #>  9 107041149         107041549         0.551   #> 10 109011172         109011172         1.00    #> # ℹ 451 more rows map_data_with_correspondence(   codes = c(107011130, 107011130),   values = c(1, 4),   from_area = \"sa2\",   from_year = 2011,   to_area = \"sa2\",   to_year = 2016,   value_type = \"units\",   seed = 2 ) #> # A tibble: 2 × 2 #>   SA2_MAINCODE_2016 values #>   <chr>              <dbl> #> 1 107011545              1 #> 2 107011546              4 map_data_with_correspondence(   codes = 107011130,   values = 10,   from_area = \"sa2\",   from_year = 2011,   to_area = \"sa2\",   to_year = 2016,   value_type = \"aggs\" ) #> # A tibble: 3 × 2 #>   SA2_MAINCODE_2016 values #>   <chr>              <dbl> #> 1 107011545           4.82 #> 2 107011546           3.62 #> 3 107011547           1.57"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/articles/mapping-data.html","id":"solution-2-adjust-your-geography-so-suit-","dir":"Articles","previous_headings":"The solutions","what":"Solution 2: Adjust your geography so suit.","title":"Mapping data across geographies","text":"cases, may given data SA2 level want visualise LHN level. SA2s almost always completely contained within LHN isn’t always case. ’s still important able see differences SA2s also differences LHNs, might best split particular SA2s cross LHN boundaries.  graphic, original SA2 (210041241) crosses LHN boundary (Brimbank Melton Hume Moreland) split two parts (B) boarder. can map data new geography can visualise differences SA2s maintaining separation LHNs.","code":"custom_geo <- create_child_geo(   child_geo = get_polygon(\"sa22011\"),   parent_geo = get_polygon(\"LHN\") ) #> The data for the Local Hospital Networks (LHN) are from here: <https://hub.arcgis.com/datasets/ACSQHC::local-hospital-networks/explore>  custom_geo |>   filter(stringr::str_detect(sa2_code_2011, \"210041241\")) |>   ggplot() +   geom_sf(alpha = 1, aes(fill = sa2_code_2011), size = 10, col = \"transparent\") +   geom_sf(     data = filter(get_polygon(\"LHN\"), LHN_Name %in% c(\"Brimbank Melton\", \"Hume Moreland\")),     aes(fill = LHN_Name),     col = \"black\",     linetype = \"dashed\",     size = 10,     alpha = 0.4   ) +   labs(fill = \"\") +   theme_bw() #> The data for the Local Hospital Networks (LHN) are from here: <https://hub.arcgis.com/datasets/ACSQHC::local-hospital-networks/explore>"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/articles/mapping-data.html","id":"mapping-grouped-data","dir":"Articles","previous_headings":"","what":"Mapping grouped data","title":"Mapping data across geographies","text":"Sometimes, may data groups, values group within geography want map new geography. map_data_with_correspondence() can handle groups nicely groups argument. Also example, show can pass input data .data reference columns codes values arguments rather passing vectors.","code":"sa2_2011_data <-   get_polygon(\"sa22011\") |>   as_tibble() |>   select(sa2_code_2011) |>   mutate(     ages_00_to_11 = rnorm(n = max(n()), mean = 10, sd = 2),     ages_12_to_24 = rnorm(n = max(n()), mean = 20, sd = 4),     ages_25_to_64 = rnorm(n = max(n()), mean = 25, sd = 5),     ages_65_plus = rnorm(n = max(n()), mean = 40, sd = 8)   ) |>   pivot_longer(     !sa2_code_2011,     names_to = \"agegrp\",     values_to = \"outcome_var\",     names_transform = ~ str_remove(.x, \"ages_\") |>       str_replace(\"_to_\", \"-\") |>       str_replace(\"_plus\", \"+\")   ) #> Reading sa22011 file found in /tmp/RtmpEPnJf7  sa2_2016_data <- map_data_with_correspondence(   .data = sa2_2011_data,   codes = sa2_code_2011,   values = outcome_var,   groups = agegrp,   from_area = \"sa2\",   from_year = 2011,   to_area = \"sa2\",   to_year = 2016,   value_type = \"aggs\" )  sa2_2016_data #> # A tibble: 9,212 × 3 #>    SA2_MAINCODE_2016 outcome_var agegrp #>    <chr>                   <dbl> <chr>  #>  1 101021007                6.36 00-11  #>  2 101021008                9.51 00-11  #>  3 101021009                9.51 00-11  #>  4 101021010                9.43 00-11  #>  5 101021011                8.89 00-11  #>  6 101021012               11.3  00-11  #>  7 101031013               14.1  00-11  #>  8 101031014                6.74 00-11  #>  9 101031015               11.0  00-11  #> 10 101031016                6.27 00-11  #> # ℹ 9,202 more rows"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rex Parsons. Author, maintainer.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Parsons R (2024). hpa.spatial: (Australian) Data Access Helpful Functions Spatial Data Analyses. R package version 0.2.12.9000, https://healthpolicyanalysis.github.io/hpa.spatial/.","code":"@Manual{,   title = {hpa.spatial: (Australian) Data Access and Helpful Functions for Spatial Data Analyses},   author = {Rex Parsons},   year = {2024},   note = {R package version 0.2.12.9000},   url = {https://healthpolicyanalysis.github.io/hpa.spatial/}, }"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/index.html","id":"hpaspatial-","dir":"","previous_headings":"","what":"(Australian) Data Access and Helpful Functions for Spatial Data Analyses","title":"(Australian) Data Access and Helpful Functions for Spatial Data Analyses","text":"goal hpa.spatial make relevant shape files data easily available include helpful functions analysis spatial data, focusing Australian (health) context.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/index.html","id":"notes-on-other-packages","dir":"","previous_headings":"","what":"Notes on other packages","title":"(Australian) Data Access and Helpful Functions for Spatial Data Analyses","text":"shape files available within {absmapsdata} can loaded using {strayr}. way data accessed hpa.spatial uses packages well replicating approach access data {hpa.spatial.data}.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"(Australian) Data Access and Helpful Functions for Spatial Data Analyses","text":"hpa.spatial available GitHub. can install development release versions using code :","code":"# install.packages(\"remotes\") remotes::install_github(\"healthpolicyanalysis/hpa.spatial\") # development version remotes::install_github(\"healthpolicyanalysis/hpa.spatial@*release\") # latest release version library(hpa.spatial) library(sf) library(dplyr) library(ggplot2)"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/index.html","id":"getting-shapefiles","dir":"","previous_headings":"","what":"Getting shapefiles","title":"(Australian) Data Access and Helpful Functions for Spatial Data Analyses","text":"get_polygon() used get shape files abs.   used way strayr::read_absmap() except also includes simplify_keep argument simplifying polygon.","code":"sa2_2016 <- get_polygon(area = \"sa2\", year = 2016) head(sa2_2016) #> Simple feature collection with 6 features and 14 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 149.0781 ymin: -36.00922 xmax: 150.2157 ymax: -34.98032 #> Geodetic CRS:  WGS 84 #>   sa2_code_2016 sa2_5dig_2016                   sa2_name_2016 sa3_code_2016 #> 1     101021007         11007                       Braidwood         10102 #> 2     101021008         11008                         Karabar         10102 #> 3     101021009         11009                      Queanbeyan         10102 #> 4     101021010         11010               Queanbeyan - East         10102 #> 5     101021011         11011               Queanbeyan Region         10102 #> 6     101021012         11012 Queanbeyan West - Jerrabomberra         10102 #>   sa3_name_2016 sa4_code_2016  sa4_name_2016 gcc_code_2016 gcc_name_2016 #> 1    Queanbeyan           101 Capital Region         1RNSW   Rest of NSW #> 2    Queanbeyan           101 Capital Region         1RNSW   Rest of NSW #> 3    Queanbeyan           101 Capital Region         1RNSW   Rest of NSW #> 4    Queanbeyan           101 Capital Region         1RNSW   Rest of NSW #> 5    Queanbeyan           101 Capital Region         1RNSW   Rest of NSW #> 6    Queanbeyan           101 Capital Region         1RNSW   Rest of NSW #>   state_code_2016 state_name_2016 areasqkm_2016 cent_long  cent_lat #> 1               1 New South Wales     3418.3525  149.7932 -35.45508 #> 2               1 New South Wales        6.9825  149.2328 -35.37590 #> 3               1 New South Wales        4.7634  149.2255 -35.35103 #> 4               1 New South Wales       13.0034  149.2524 -35.35520 #> 5               1 New South Wales     3054.4099  149.3911 -35.44408 #> 6               1 New South Wales       13.6789  149.2028 -35.37760 #>                         geometry #> 1 MULTIPOLYGON (((149.7606 -3... #> 2 MULTIPOLYGON (((149.2192 -3... #> 3 MULTIPOLYGON (((149.2315 -3... #> 4 MULTIPOLYGON (((149.2315 -3... #> 5 MULTIPOLYGON (((149.2563 -3... #> 6 MULTIPOLYGON (((149.2064 -3...  sa2_2016 |>   ggplot() +   geom_sf() +   theme_bw() +   ggtitle(\"SA2 (2016)\") lga_2016 <- get_polygon(area = \"lga\", year = 2016) head(lga_2016) #> Simple feature collection with 6 features and 7 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 142.4523 ymin: -37.50503 xmax: 153.6076 ymax: -28.7043 #> Geodetic CRS:  WGS 84 #>   lga_code_2016         lga_name_2016 state_code_2016 state_name_2016 #> 1         10050            Albury (C)               1 New South Wales #> 2         10130 Armidale Regional (A)               1 New South Wales #> 3         10250           Ballina (A)               1 New South Wales #> 4         10300         Balranald (A)               1 New South Wales #> 5         10470 Bathurst Regional (A)               1 New South Wales #> 6         10550       Bega Valley (A)               1 New South Wales #>   areasqkm_2016 cent_long  cent_lat                       geometry #> 1      305.9459  146.9704 -36.02660 MULTIPOLYGON (((147.0967 -3... #> 2     8620.6990  151.8291 -30.33634 MULTIPOLYGON (((150.9923 -3... #> 3      484.9389  153.4861 -28.85288 MULTIPOLYGON (((153.4496 -2... #> 4    21690.6753  143.6116 -33.95034 MULTIPOLYGON (((143.5525 -3... #> 5     3817.8646  149.5256 -33.43010 MULTIPOLYGON (((149.8696 -3... #> 6     6278.8811  149.7176 -36.82594 MULTIPOLYGON (((149.9763 -3...  lga_2016 |>   ggplot() +   geom_sf() +   theme_bw() +   ggtitle(\"LGA (2016)\") sa2_2016_simple <- get_polygon(area = \"sa2\", year = 2016, simplify_keep = 0.1)  sa2_2016 |>   filter(gcc_name_2016 == \"Greater Brisbane\") |>   ggplot() +   geom_sf() +   scale_x_continuous(limits = c(152.9, 153.1)) +   scale_y_continuous(limits = c(-27.4, -27.6)) +   theme_bw()  sa2_2016_simple |>   filter(gcc_name_2016 == \"Greater Brisbane\") |>   ggplot() +   geom_sf() +   scale_x_continuous(limits = c(152.9, 153.1)) +   scale_y_continuous(limits = c(-27.4, -27.6)) +   theme_bw()"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/index.html","id":"other-shapefiles","dir":"","previous_headings":"Getting shapefiles","what":"Other shapefiles","title":"(Australian) Data Access and Helpful Functions for Spatial Data Analyses","text":"Aside built shapefiles hosted {absmapsdata}, get_polygon() can also access shapefiles local hospital networks (LHNs) Primary Health Networks (PHNs). example, can accessed \"area\" \"name\" arguments “LHN”.","code":"qld_hhs <- get_polygon(area = \"LHN\") |> filter(state == \"QLD\") #> The data for the Local Hospital Networks (LHN) are from here: <https://hub.arcgis.com/datasets/ACSQHC::local-hospital-networks/explore> head(qld_hhs) #> Simple feature collection with 6 features and 3 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 137.9975 ymin: -29.1779 xmax: 153.5522 ymax: -15.90277 #> Geodetic CRS:  GDA2020 #> # A tibble: 6 × 4 #>   LHN_Name              state STATE_CODE                                geometry #>   <chr>                 <fct> <chr>                           <MULTIPOLYGON [°]> #> 1 Cairns and Hinterland QLD   3          (((146.1522 -17.99844, 146.1524 -17.99… #> 2 Central Queensland    QLD   3          (((150.0524 -22.13545, 150.0573 -22.13… #> 3 Central West (Qld)    QLD   3          (((143.2272 -21.31218, 143.2364 -21.31… #> 4 Darling Downs         QLD   3          (((150.245 -25.4072, 150.2493 -25.4081… #> 5 Gold Coast            QLD   3          (((153.4123 -27.9313, 153.4128 -27.931… #> 6 Mackay                QLD   3          (((147.7665 -19.70548, 147.7666 -19.70…  qld_hhs |>   ggplot() +   geom_sf() +   theme_bw()"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/index.html","id":"mapping-data-between-asgs-editions","dir":"","previous_headings":"","what":"Mapping data between ASGS editions","title":"(Australian) Data Access and Helpful Functions for Spatial Data Analyses","text":"map_data_with_correspondence() used map data across ASGS editions. used unit level data, randomly allocate value code updated edition based population-weighted proportions (probabilities) relevant correspondence table. used aggregate data, split value among codes updated edition based population-weighted proportions relevant correspondence table.","code":"map_data_with_correspondence(   codes = c(107011130, 107041149),   values = c(10, 10),   from_area = \"sa2\",   from_year = 2011,   to_area = \"sa2\",   to_year = 2016,   value_type = \"units\" ) #> # A tibble: 2 × 2 #>   SA2_MAINCODE_2016 values #>   <chr>              <dbl> #> 1 107011547             10 #> 2 107041548             10 map_data_with_correspondence(   codes = c(107011130, 107041149),   values = c(10, 10),   from_area = \"sa2\",   from_year = 2011,   to_area = \"sa2\",   to_year = 2016,   value_type = \"aggs\" ) #> # A tibble: 5 × 2 #>   SA2_MAINCODE_2016 values #>   <chr>              <dbl> #> 1 107011545           4.82 #> 2 107011546           3.62 #> 3 107011547           1.57 #> 4 107041548           4.49 #> 5 107041549           5.51"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/index.html","id":"example","dir":"","previous_headings":"Mapping data between ASGS editions","what":"Example","title":"(Australian) Data Access and Helpful Functions for Spatial Data Analyses","text":"Suppose counts patients within SA2s (2011) want aggregate SA3s (2016 edition). map_data_correspondence() mapping higher level ASGS recent edition.","code":"sa2_2011 <- get_polygon(\"sa22011\") sa2_2011$patient_counts <- rpois(n = nrow(sa2_2011), lambda = 30)  sa3_counts <- map_data_with_correspondence(   codes = sa2_2011$sa2_code_2011,   values = sa2_2011$patient_counts,   from_area = \"sa2\",   from_year = 2011,   to_area = \"sa3\",   to_year = 2016,   value_type = \"aggs\" ) |>   rename(patient_counts = values) #> Error in get(filename) : object 'CG_SA2_2016_SA3_2016' not found  sa3_2016 <- get_polygon(\"sa32016\") |>   left_join(sa3_counts) sa2_2011 |>   ggplot() +   geom_sf(aes(fill = patient_counts)) +   ggtitle(\"Patient counts by SA2 (2011)\") +   theme_bw()  sa3_2016 |>   ggplot() +   geom_sf(aes(fill = patient_counts)) +   ggtitle(\"Patient counts by SA3 (2016)\") +   theme_bw()"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/check_for_internal_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for (and return if so) the shape if it is ","title":"Check for (and return if so) the shape if it is ","text":"Check (return ) shape \"internal\" (contained within hpa.spatial/hpa.spatial.data)","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/check_for_internal_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for (and return if so) the shape if it is ","text":"","code":"check_for_internal_polygon(   name = NULL,   area = NULL,   year = NULL,   export_dir = tempdir(),   ... )"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/check_for_internal_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for (and return if so) the shape if it is ","text":"name character string names identify data kept absmapsdata. area character string names identify data kept absmapsdata. year character string names identify data kept absmapsdata. export_dir directory store downloaded data. ... Additional, ignored arguments.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/check_for_internal_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for (and return if so) the shape if it is ","text":"sf object , pkg data found, NULL.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/check_for_internal_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for (and return if so) the shape if it is ","text":"","code":"# Get the Local Hospital Network (LHN) shapes. shp <- check_for_internal_polygon(name = \"LHN\") #> The data for the Local Hospital Networks (LHN) are from here: <https://hub.arcgis.com/datasets/ACSQHC::local-hospital-networks/explore>"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/create_child_geo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a child geography (polygon) which fits neatly into a parent geography — create_child_geo","title":"Create a child geography (polygon) which fits neatly into a parent geography — create_child_geo","text":"Create child geography (polygon) fits neatly parent geography","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/create_child_geo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a child geography (polygon) which fits neatly into a parent geography — create_child_geo","text":"","code":"create_child_geo(   child_geo,   parent_geo,   mb_geo = get_mb21_pop(),   mb_poly = get_mb21_poly(),   minimum_majority_portions = 0.95 )"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/create_child_geo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a child geography (polygon) which fits neatly into a parent geography — create_child_geo","text":"child_geo Child geography (sf polygon multipolygon) adjusted fit within parent_geo. parent_geo Parent geography (sf polygon multipolygon) child geography adapted fit within. mb_geo Mesh blocks geography Person column population based mapping. Defaults use 2021 edition census data. mb_poly Mesh blocks polygon dissolving within subsets polygons child_geo cross multiple polygons parent_geo. Defaults use 2021 edition. minimum_majority_portions child geography minimum_majority_portions proportion population within single polygon within parent_geo, split multiple separate polygons.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/create_child_geo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a child geography (polygon) which fits neatly into a parent geography — create_child_geo","text":"sf polygon multipolygon.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/create_child_geo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a child geography (polygon) which fits neatly into a parent geography — create_child_geo","text":"","code":"# \\donttest{ sa3 <- get_polygon(\"sa32016\") lhns <- get_polygon(\"LHN\") #> The data for the Local Hospital Networks (LHN) are from here: <https://hub.arcgis.com/datasets/ACSQHC::local-hospital-networks/explore> create_child_geo(sa3, lhns) #> There are some polygons in the child_geo which are not contained within the parent_geo. Assigning these to the nearest polygon in the parent_geo #> Simple feature collection with 396 features and 2 fields #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: 96.81696 ymin: -43.74047 xmax: 167.9969 ymax: -9.219923 #> Geodetic CRS:  GDA2020 #> First 10 features: #>    sa3_code_2016            LHN_Name                       geometry #> 1          10102        Southern NSW MULTIPOLYGON (((149.979 -35... #> 2          10103        Southern NSW MULTIPOLYGON (((148.8042 -3... #> 3          10104        Southern NSW MULTIPOLYGON (((150.3345 -3... #> 4          10105        Southern NSW MULTIPOLYGON (((149.0114 -3... #> 5        10106-A        Murrumbidgee MULTIPOLYGON (((148.6496 -3... #> 6        10106-B        Southern NSW POLYGON ((148.6936 -35.1997... #> 7          10201 Central Coast (NSW) MULTIPOLYGON (((151.315 -33... #> 8          10202 Central Coast (NSW) MULTIPOLYGON (((151.485 -33... #> 9          10301         Western NSW MULTIPOLYGON (((149.323 -33... #> 10       10302-A        Murrumbidgee POLYGON ((147.4176 -34.2052... # }"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_correspondence_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a correspondence table, either via strayr::read_correspondence_tbl or by creating one with make_correspondence_tbl — get_correspondence_tbl","title":"Get a correspondence table, either via strayr::read_correspondence_tbl or by creating one with make_correspondence_tbl — get_correspondence_tbl","text":"Get correspondence table, either via strayr::read_correspondence_tbl creating one make_correspondence_tbl","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_correspondence_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a correspondence table, either via strayr::read_correspondence_tbl or by creating one with make_correspondence_tbl — get_correspondence_tbl","text":"","code":"get_correspondence_tbl(   from_area = NULL,   from_year = NULL,   from_geo = NULL,   to_area = NULL,   to_year = NULL,   to_geo = NULL,   export_dir = tempdir(),   export_fname = NULL,   mb_geo = get_mb21_pop() )"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_correspondence_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a correspondence table, either via strayr::read_correspondence_tbl or by creating one with make_correspondence_tbl — get_correspondence_tbl","text":"from_area area want correspond (.e. areas data currently ). example: 'sa1', 'sa2', 'sa3', 'sa4'. from_year year want correspond . example: 2011, 2016. from_geo polygon geography. Helpful available using from_year from_area get_polygon. to_area area want correspond (.e. areas want data ). to_year year want correspond . to_geo polygon geography. Helpful available using to_year to_area get_polygon. export_dir directory store downloaded data. export_fname file name saved file (applicable from_geo) to_geo used instead areas years). mb_geo mesh blocks data census population. Defaults using 2021 edition mesh blocks 2021 census data (see get_mb21_pop()).","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_correspondence_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a correspondence table, either via strayr::read_correspondence_tbl or by creating one with make_correspondence_tbl — get_correspondence_tbl","text":"tibble.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_correspondence_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a correspondence table, either via strayr::read_correspondence_tbl or by creating one with make_correspondence_tbl — get_correspondence_tbl","text":"","code":"get_correspondence_tbl(from_area = \"sa2\", from_year = 2021, to_area = \"LHN\") #> Error in get(filename) : object 'CG_SA2_2021_LHN_' not found #> Failed to retrieve correspondence table through {strayr}, making correspondence table #> The data for the Local Hospital Networks (LHN) are from here: <https://hub.arcgis.com/datasets/ACSQHC::local-hospital-networks/explore> #> # A tibble: 2,526 × 3 #> # Groups:   sa2_code_2021 [2,454] #>    sa2_code_2021 LHN_Name     ratio #>    <chr>         <chr>        <dbl> #>  1 101021007     Southern NSW     1 #>  2 101021008     Southern NSW     1 #>  3 101021009     Southern NSW     1 #>  4 101021010     Southern NSW     1 #>  5 101021012     Southern NSW     1 #>  6 101021610     Southern NSW     1 #>  7 101021611     Southern NSW     1 #>  8 101031013     Southern NSW     1 #>  9 101031014     Southern NSW     1 #> 10 101031015     Southern NSW     1 #> # ℹ 2,516 more rows"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mb21_poly.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Mesh Blocks (2021 edition) polygons — get_mb21_poly","title":"Get Mesh Blocks (2021 edition) polygons — get_mb21_poly","text":"Get Mesh Blocks (2021 edition) polygons","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mb21_poly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Mesh Blocks (2021 edition) polygons — get_mb21_poly","text":"","code":"get_mb21_poly(export_dir = tempdir())"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mb21_poly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Mesh Blocks (2021 edition) polygons — get_mb21_poly","text":"export_dir directory store downloaded data.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mb21_poly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Mesh Blocks (2021 edition) polygons — get_mb21_poly","text":"sf object.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mb21_poly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Mesh Blocks (2021 edition) polygons — get_mb21_poly","text":"","code":"get_mb21_poly() #> Simple feature collection with 368286 features and 19 fields (with 31 geometries empty) #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 96.81695 ymin: -43.7405 xmax: 167.998 ymax: -9.142163 #> Geodetic CRS:  GDA2020 #> # A tibble: 368,286 × 20 #>    MB_CODE21   MB_CAT21    CHG_FLAG21 CHG_LBL21 SA1_CODE21 SA2_CODE21 SA2_NAME21 #>  * <chr>       <chr>       <chr>      <chr>     <chr>      <chr>      <chr>      #>  1 10000010000 Residential 0          No change 109011172… 109011172  Albury - … #>  2 10000021000 Commercial  0          No change 109011176… 109011176  Lavington  #>  3 10000022000 Commercial  0          No change 109011176… 109011176  Lavington  #>  4 10000023000 Commercial  0          No change 109011176… 109011176  Lavington  #>  5 10000024000 Residential 0          No change 109011176… 109011176  Lavington  #>  6 10000040000 Residential 0          No change 109011176… 109011176  Lavington  #>  7 10000050000 Residential 0          No change 109011176… 109011176  Lavington  #>  8 10000061000 Residential 0          No change 109011172… 109011172  Albury - … #>  9 10000062000 Residential 0          No change 109011172… 109011172  Albury - … #> 10 10000063000 Residential 0          No change 109011172… 109011172  Albury - … #> # ℹ 368,276 more rows #> # ℹ 13 more variables: SA3_CODE21 <chr>, SA3_NAME21 <chr>, SA4_CODE21 <chr>, #> #   SA4_NAME21 <chr>, GCC_CODE21 <chr>, GCC_NAME21 <chr>, STE_CODE21 <chr>, #> #   STE_NAME21 <chr>, AUS_CODE21 <chr>, AUS_NAME21 <chr>, AREASQKM21 <dbl>, #> #   LOCI_URI21 <chr>, geometry <POLYGON [°]>"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mb21_pop.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Mesh Blocks (2021 edition) and population counts — get_mb21_pop","title":"Get Mesh Blocks (2021 edition) and population counts — get_mb21_pop","text":"Get Mesh Blocks (2021 edition) population counts","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mb21_pop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Mesh Blocks (2021 edition) and population counts — get_mb21_pop","text":"","code":"get_mb21_pop(export_dir = tempdir())"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mb21_pop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Mesh Blocks (2021 edition) and population counts — get_mb21_pop","text":"export_dir directory store downloaded data.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mb21_pop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Mesh Blocks (2021 edition) and population counts — get_mb21_pop","text":"sf object.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mb21_pop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Mesh Blocks (2021 edition) and population counts — get_mb21_pop","text":"","code":"get_mb21_pop() #> Simple feature collection with 368286 features and 24 fields (with 31 geometries empty) #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 96.82008 ymin: -43.73813 xmax: 167.9959 ymax: -9.143038 #> Geodetic CRS:  GDA2020 #> # A tibble: 368,286 × 25 #>    MB_CODE21   MB_CAT21    CHG_FLAG21 CHG_LBL21 SA1_CODE21 SA2_CODE21 SA2_NAME21 #>    <chr>       <chr>       <chr>      <chr>     <chr>      <chr>      <chr>      #>  1 10000010000 Residential 0          No change 109011172… 109011172  Albury - … #>  2 10000021000 Commercial  0          No change 109011176… 109011176  Lavington  #>  3 10000022000 Commercial  0          No change 109011176… 109011176  Lavington  #>  4 10000023000 Commercial  0          No change 109011176… 109011176  Lavington  #>  5 10000024000 Residential 0          No change 109011176… 109011176  Lavington  #>  6 10000040000 Residential 0          No change 109011176… 109011176  Lavington  #>  7 10000050000 Residential 0          No change 109011176… 109011176  Lavington  #>  8 10000061000 Residential 0          No change 109011172… 109011172  Albury - … #>  9 10000062000 Residential 0          No change 109011172… 109011172  Albury - … #> 10 10000063000 Residential 0          No change 109011172… 109011172  Albury - … #> # ℹ 368,276 more rows #> # ℹ 18 more variables: SA3_CODE21 <chr>, SA3_NAME21 <chr>, SA4_CODE21 <chr>, #> #   SA4_NAME21 <chr>, GCC_CODE21 <chr>, GCC_NAME21 <chr>, STE_CODE21 <chr>, #> #   STE_NAME21 <chr>, AUS_CODE21 <chr>, AUS_NAME21 <chr>, AREASQKM21 <dbl>, #> #   LOCI_URI21 <chr>, geometry <POINT [°]>, MB_CATEGORY_NAME_2021 <chr>, #> #   AREA_ALBERS_SQKM <dbl>, Dwelling <dbl>, Person <dbl>, State <dbl>"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mmm19_poly.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified Monash Model polygons (SA1, 2016 edition, polygons with MMM, 2019 edition column) — get_mmm19_poly","title":"Modified Monash Model polygons (SA1, 2016 edition, polygons with MMM, 2019 edition column) — get_mmm19_poly","text":"Modified Monash Model polygons (SA1, 2016 edition, polygons MMM, 2019 edition column)","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mmm19_poly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified Monash Model polygons (SA1, 2016 edition, polygons with MMM, 2019 edition column) — get_mmm19_poly","text":"","code":"get_mmm19_poly(export_dir = tempdir())"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mmm19_poly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modified Monash Model polygons (SA1, 2016 edition, polygons with MMM, 2019 edition column) — get_mmm19_poly","text":"export_dir directory store downloaded data.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mmm19_poly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modified Monash Model polygons (SA1, 2016 edition, polygons with MMM, 2019 edition column) — get_mmm19_poly","text":"sf object.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_mmm19_poly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modified Monash Model polygons (SA1, 2016 edition, polygons with MMM, 2019 edition column) — get_mmm19_poly","text":"","code":"get_mmm19_poly() #> Simple feature collection with 57490 features and 18 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 96.81695 ymin: -43.74048 xmax: 167.9969 ymax: -9.219937 #> Geodetic CRS:  WGS 84 #> First 10 features: #>     SA1_MAIN16 sa1_7dig_2016 sa2_code_2016 sa2_5dig_2016 sa2_name_2016 #> 1  10102100701       1100701     101021007         11007     Braidwood #> 2  10102100702       1100702     101021007         11007     Braidwood #> 3  10102100703       1100703     101021007         11007     Braidwood #> 4  10102100704       1100704     101021007         11007     Braidwood #> 5  10102100705       1100705     101021007         11007     Braidwood #> 6  10102100706       1100706     101021007         11007     Braidwood #> 7  10102100707       1100707     101021007         11007     Braidwood #> 8  10102100708       1100708     101021007         11007     Braidwood #> 9  10102100709       1100709     101021007         11007     Braidwood #> 10 10102100710       1100710     101021007         11007     Braidwood #>    sa3_code_2016 sa3_name_2016 sa4_code_2016  sa4_name_2016 gcc_code_2016 #> 1          10102    Queanbeyan           101 Capital Region         1RNSW #> 2          10102    Queanbeyan           101 Capital Region         1RNSW #> 3          10102    Queanbeyan           101 Capital Region         1RNSW #> 4          10102    Queanbeyan           101 Capital Region         1RNSW #> 5          10102    Queanbeyan           101 Capital Region         1RNSW #> 6          10102    Queanbeyan           101 Capital Region         1RNSW #> 7          10102    Queanbeyan           101 Capital Region         1RNSW #> 8          10102    Queanbeyan           101 Capital Region         1RNSW #> 9          10102    Queanbeyan           101 Capital Region         1RNSW #> 10         10102    Queanbeyan           101 Capital Region         1RNSW #>    gcc_name_2016 state_code_2016 state_name_2016 areasqkm_2016 cent_long #> 1    Rest of NSW               1 New South Wales      362.8727  149.8577 #> 2    Rest of NSW               1 New South Wales      229.7459  149.8030 #> 3    Rest of NSW               1 New South Wales        2.3910  149.7896 #> 4    Rest of NSW               1 New South Wales        1.2816  149.8023 #> 5    Rest of NSW               1 New South Wales        1.1978  149.7968 #> 6    Rest of NSW               1 New South Wales       63.3894  149.7359 #> 7    Rest of NSW               1 New South Wales      442.7713  149.8338 #> 8    Rest of NSW               1 New South Wales     1137.7239  149.6201 #> 9    Rest of NSW               1 New South Wales      350.9881  149.7355 #> 10   Rest of NSW               1 New South Wales      825.9908  150.0091 #>     cent_lat MMM2019     MMM2019_label                       geometry #> 1  -35.14608       5 Small rural towns MULTIPOLYGON (((149.7606 -3... #> 2  -35.43467       5 Small rural towns MULTIPOLYGON (((149.8176 -3... #> 3  -35.43858       5 Small rural towns MULTIPOLYGON (((149.7988 -3... #> 4  -35.43902       5 Small rural towns MULTIPOLYGON (((149.7988 -3... #> 5  -35.44991       5 Small rural towns MULTIPOLYGON (((149.7965 -3... #> 6  -35.58121       5 Small rural towns MULTIPOLYGON (((149.8062 -3... #> 7  -35.61750       5 Small rural towns MULTIPOLYGON (((149.9774 -3... #> 8  -35.68669       5 Small rural towns MULTIPOLYGON (((149.5157 -3... #> 9  -35.27190       5 Small rural towns MULTIPOLYGON (((149.6655 -3... #> 10 -35.25637       5 Small rural towns MULTIPOLYGON (((149.9774 -3..."},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Get shapefiles from ABS (via strayr and absmapsdata or via hpa.spatial and hpa.spatial.data) — get_polygon","title":"Get shapefiles from ABS (via strayr and absmapsdata or via hpa.spatial and hpa.spatial.data) — get_polygon","text":"Get shapefiles ABS (via strayr absmapsdata via hpa.spatial hpa.spatial.data)","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get shapefiles from ABS (via strayr and absmapsdata or via hpa.spatial and hpa.spatial.data) — get_polygon","text":"","code":"get_polygon(   name = NULL,   area = NULL,   year = NULL,   remove_year_suffix,   export_dir = tempdir(),   .validate_name,   simplify_keep = 1,   crs = NULL,   ... )"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get shapefiles from ABS (via strayr and absmapsdata or via hpa.spatial and hpa.spatial.data) — get_polygon","text":"name character string containing absmapsdata file names [area][year] format, eg \"sa42016\"; \"gcc2021\". See full list <https://github.com/wfmackey/absmapsdata>. Note: name entered, area year values ignored. area character string containing concise absmapsdata area names, eg \"sa4\"; \"gcc\". See full list <https://github.com/wfmackey/absmapsdata>. year character string numeric full source year absmapsdata object, eg \"2016\"; 2021. See full list <https://github.com/wfmackey/absmapsdata>. remove_year_suffix logical defaulting FALSE. TRUE, 'strip_year_suffix' run returning object, removing '_year' suffix variable names. export_dir Path directory store desired sf object. tempdir() default. .validate_name Logical defaulting TRUE, checks name input (area year combination) list available objects absmapsdata package. simplify_keep proportion points retain (0-1; default 1 - simplification). crs Whether update crs (necessary) returned polygon. ... Arguments passed rmapshaper::ms_simplify() (keep).","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get shapefiles from ABS (via strayr and absmapsdata or via hpa.spatial and hpa.spatial.data) — get_polygon","text":"polygon class sf.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/get_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get shapefiles from ABS (via strayr and absmapsdata or via hpa.spatial and hpa.spatial.data) — get_polygon","text":"","code":"get_polygon(area = \"sa2\", year = 2016) #> Simple feature collection with 2310 features and 14 fields (with 18 geometries empty) #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 96.81695 ymin: -43.74048 xmax: 167.9969 ymax: -9.219937 #> Geodetic CRS:  WGS 84 #> First 10 features: #>    sa2_code_2016 sa2_5dig_2016                   sa2_name_2016 sa3_code_2016 #> 1      101021007         11007                       Braidwood         10102 #> 2      101021008         11008                         Karabar         10102 #> 3      101021009         11009                      Queanbeyan         10102 #> 4      101021010         11010               Queanbeyan - East         10102 #> 5      101021011         11011               Queanbeyan Region         10102 #> 6      101021012         11012 Queanbeyan West - Jerrabomberra         10102 #> 7      101031013         11013                         Bombala         10103 #> 8      101031014         11014                           Cooma         10103 #> 9      101031015         11015                    Cooma Region         10103 #> 10     101031016         11016           Jindabyne - Berridale         10103 #>      sa3_name_2016 sa4_code_2016  sa4_name_2016 gcc_code_2016 gcc_name_2016 #> 1       Queanbeyan           101 Capital Region         1RNSW   Rest of NSW #> 2       Queanbeyan           101 Capital Region         1RNSW   Rest of NSW #> 3       Queanbeyan           101 Capital Region         1RNSW   Rest of NSW #> 4       Queanbeyan           101 Capital Region         1RNSW   Rest of NSW #> 5       Queanbeyan           101 Capital Region         1RNSW   Rest of NSW #> 6       Queanbeyan           101 Capital Region         1RNSW   Rest of NSW #> 7  Snowy Mountains           101 Capital Region         1RNSW   Rest of NSW #> 8  Snowy Mountains           101 Capital Region         1RNSW   Rest of NSW #> 9  Snowy Mountains           101 Capital Region         1RNSW   Rest of NSW #> 10 Snowy Mountains           101 Capital Region         1RNSW   Rest of NSW #>    state_code_2016 state_name_2016 areasqkm_2016 cent_long  cent_lat #> 1                1 New South Wales     3418.3525  149.7932 -35.45508 #> 2                1 New South Wales        6.9825  149.2328 -35.37590 #> 3                1 New South Wales        4.7634  149.2255 -35.35103 #> 4                1 New South Wales       13.0034  149.2524 -35.35520 #> 5                1 New South Wales     3054.4099  149.3911 -35.44408 #> 6                1 New South Wales       13.6789  149.2028 -35.37760 #> 7                1 New South Wales     3989.3618  149.0455 -36.87794 #> 8                1 New South Wales      103.6371  149.1194 -36.25023 #> 9                1 New South Wales     6250.8748  149.0822 -36.12715 #> 10               1 New South Wales     3939.5484  148.6089 -36.49170 #>                          geometry #> 1  MULTIPOLYGON (((149.7606 -3... #> 2  MULTIPOLYGON (((149.2192 -3... #> 3  MULTIPOLYGON (((149.2315 -3... #> 4  MULTIPOLYGON (((149.2315 -3... #> 5  MULTIPOLYGON (((149.2563 -3... #> 6  MULTIPOLYGON (((149.2064 -3... #> 7  MULTIPOLYGON (((148.4221 -3... #> 8  MULTIPOLYGON (((149.0751 -3... #> 9  MULTIPOLYGON (((148.5512 -3... #> 10 MULTIPOLYGON (((148.5512 -3... get_polygon(name = \"sa22016\", simplify_keep = 0.05) #> Reading sa22016 file found in /tmp/RtmpYpE4w3 #> Simple feature collection with 2268 features and 14 fields #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: 105.5507 ymin: -43.63203 xmax: 167.9969 ymax: -9.229287 #> Geodetic CRS:  WGS 84 #> First 10 features: #>    cent_long state_name_2016 state_code_2016 areasqkm_2016 gcc_name_2016 #> 1   149.7932 New South Wales               1     3418.3525   Rest of NSW #> 2   149.2328 New South Wales               1        6.9825   Rest of NSW #> 3   149.2255 New South Wales               1        4.7634   Rest of NSW #> 4   149.2524 New South Wales               1       13.0034   Rest of NSW #> 5   149.3911 New South Wales               1     3054.4099   Rest of NSW #> 6   149.2028 New South Wales               1       13.6789   Rest of NSW #> 7   149.0455 New South Wales               1     3989.3618   Rest of NSW #> 8   149.1194 New South Wales               1      103.6371   Rest of NSW #> 9   149.0822 New South Wales               1     6250.8748   Rest of NSW #> 10  148.6089 New South Wales               1     3939.5484   Rest of NSW #>    sa3_code_2016 gcc_code_2016  sa4_name_2016   sa3_name_2016 #> 1          10102         1RNSW Capital Region      Queanbeyan #> 2          10102         1RNSW Capital Region      Queanbeyan #> 3          10102         1RNSW Capital Region      Queanbeyan #> 4          10102         1RNSW Capital Region      Queanbeyan #> 5          10102         1RNSW Capital Region      Queanbeyan #> 6          10102         1RNSW Capital Region      Queanbeyan #> 7          10103         1RNSW Capital Region Snowy Mountains #> 8          10103         1RNSW Capital Region Snowy Mountains #> 9          10103         1RNSW Capital Region Snowy Mountains #> 10         10103         1RNSW Capital Region Snowy Mountains #>                      sa2_name_2016 sa2_5dig_2016 sa4_code_2016 sa2_code_2016 #> 1                        Braidwood         11007           101     101021007 #> 2                          Karabar         11008           101     101021008 #> 3                       Queanbeyan         11009           101     101021009 #> 4                Queanbeyan - East         11010           101     101021010 #> 5                Queanbeyan Region         11011           101     101021011 #> 6  Queanbeyan West - Jerrabomberra         11012           101     101021012 #> 7                          Bombala         11013           101     101031013 #> 8                            Cooma         11014           101     101031014 #> 9                     Cooma Region         11015           101     101031015 #> 10           Jindabyne - Berridale         11016           101     101031016 #>     cent_lat                       geometry #> 1  -35.45508 POLYGON ((149.7606 -35.0834... #> 2  -35.37590 POLYGON ((149.2192 -35.3601... #> 3  -35.35103 POLYGON ((149.2315 -35.3422... #> 4  -35.35520 POLYGON ((149.2315 -35.3422... #> 5  -35.44408 POLYGON ((149.2563 -35.3901... #> 6  -35.37760 POLYGON ((149.2064 -35.3458... #> 7  -36.87794 POLYGON ((148.4221 -36.8886... #> 8  -36.25023 POLYGON ((149.0751 -36.2404... #> 9  -36.12715 POLYGON ((148.5512 -36.1042... #> 10 -36.49170 POLYGON ((148.5512 -36.1042..."},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/hpa.spatial-package.html","id":null,"dir":"Reference","previous_headings":"","what":"hpa.spatial: (Australian) Data Access and Helpful Functions for Spatial Data Analyses — hpa.spatial-package","title":"hpa.spatial: (Australian) Data Access and Helpful Functions for Spatial Data Analyses — hpa.spatial-package","text":"Data helpful functions spatial data analyses.","code":""},{"path":[]},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/hpa.spatial-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"hpa.spatial: (Australian) Data Access and Helpful Functions for Spatial Data Analyses — hpa.spatial-package","text":"Maintainer: Rex Parsons rex.parsons@healthpolicy.com","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/make_correspondence_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a correspondence table between any two geographies — make_correspondence_tbl","title":"Create a correspondence table between any two geographies — make_correspondence_tbl","text":"Create correspondence table two geographies","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/make_correspondence_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a correspondence table between any two geographies — make_correspondence_tbl","text":"","code":"make_correspondence_tbl(from_geo, to_geo, mb_geo = get_mb21_pop(), ...)"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/make_correspondence_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a correspondence table between any two geographies — make_correspondence_tbl","text":"from_geo {sf} POLYGON object. to_geo {sf} POLYGON object. mb_geo {sf} POINT object points centroids small area (intended mesh blocks can space small enough useful. also include column, Person, population within area. Defaults use Mesh Blocks (2021) 2021 census data. See get_mb21_pop(). ... , ignored arguments.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/make_correspondence_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a correspondence table between any two geographies — make_correspondence_tbl","text":"tibble.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/make_correspondence_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a correspondence table between any two geographies — make_correspondence_tbl","text":"","code":"make_correspondence_tbl(   from_geo = get_polygon(\"sa22016\", crs = 7844),   to_geo = get_polygon(\"sa22021\", crs = 7844),   mb_geo = get_mb21_pop() ) #> Reading sa22016 file found in /tmp/RtmpYpE4w3 #> Reading sa22021 file found in /tmp/RtmpYpE4w3 #> # A tibble: 2,487 × 3 #> # Groups:   sa2_code_2016 [2,292] #>    sa2_code_2016 sa2_code_2021 ratio #>    <chr>         <chr>         <dbl> #>  1 101021007     101021007     1     #>  2 101021008     101021008     1     #>  3 101021009     101021009     1     #>  4 101021010     101021010     1     #>  5 101021011     101021610     0.273 #>  6 101021011     101021611     0.727 #>  7 101021012     101021012     1     #>  8 101031013     101031013     1     #>  9 101031014     101031014     1     #> 10 101031015     101031015     1     #> # ℹ 2,477 more rows"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/map_data_with_correspondence.html","id":null,"dir":"Reference","previous_headings":"","what":"Map data between editions using correspondence tables from the ABS. — map_data_with_correspondence","title":"Map data between editions using correspondence tables from the ABS. — map_data_with_correspondence","text":"Map data editions using correspondence tables ABS.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/map_data_with_correspondence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map data between editions using correspondence tables from the ABS. — map_data_with_correspondence","text":"","code":"map_data_with_correspondence(   .data = NULL,   codes,   values,   groups = NULL,   from_area = NULL,   from_year = NULL,   from_geo = NULL,   to_area = NULL,   to_year = NULL,   to_geo = NULL,   correspondence_tbl = NULL,   mb_geo = get_mb21_pop(),   value_type = c(\"units\", \"aggs\"),   export_fname = NULL,   round = FALSE,   seed = NULL,   quiet = getOption(\"hpa.spatial.quiet\", FALSE) )"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/map_data_with_correspondence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map data between editions using correspondence tables from the ABS. — map_data_with_correspondence","text":".data data.frame(-like) object. Can passed codes, values groups passed reference (like dplyr::mutate()). codes Codes representing locations relevant from_area. SA1 SA2, example. values Values associated codes allocated newly mapped codes. groups Values associated codes/values specifying grouping structure. example, codes/values several age groups, groups grouping variable age group associated code value position. Defaults NULL (grouping). from_area area want correspond (ie areas data currently ). example: \"sa1\", \"sa2, \"sa3\", \"sa4\". from_year year want correspond . example: 2011, 2016. from_geo polygon geography. Helpful available using from_year from_area get_polygon. to_area area want correspond (ie areas want data ). to_year year want correspond . to_geo polygon geography. Helpful available using to_year to_area get_polygon. correspondence_tbl correspondence table used map values code sets. contain 3 columns: (1) code set values mapped, (2) code set values mapped, (3) column named \"ratio\" containing proportion/probability value(s) mapped - - code pair (row). Defaults NULL, case attempt get correspondence table ABS , available, create correspondence table based overlap shapes residential population intersection (uses mb_geo argument). mb_geo {sf} POINT object points centroids small area (intended mesh blocks can space small enough useful. also include column, Person, population within area. Defaults use Mesh Blocks (2021) 2021 census data. See get_mb21_pop(). value_type Whether data unit level aggregate level data. Unit level data randomly allocated new locations based proportions correspondence table, aggregate data dispersed based proportion across (potentially multiple) mapped codes. export_fname file name saved correspondence table file (applicable from_geo) to_geo used instead areas years). round Whether round resulting mapped values whole numbers (maybe useful mapping count, aggregate values may otherwise return decimal values mapped areas). seed random seed (integer). May useful ensuring mappings unit level data reproducible (use mapping probabilities randomly allocating observations new geographies may different runs data/inputs). quiet whether quiet warnings. Set package level quiet-ness options(hpa.spatial.quiet = TRUE).","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/map_data_with_correspondence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map data between editions using correspondence tables from the ABS. — map_data_with_correspondence","text":"data.frame.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/map_data_with_correspondence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map data between editions using correspondence tables from the ABS. — map_data_with_correspondence","text":"","code":"map_data_with_correspondence(   codes = c(107011130, 107041149),   values = c(10, 10),   from_area = \"sa2\",   from_year = 2011,   to_area = \"sa2\",   to_year = 2016,   value_type = \"units\" ) #> # A tibble: 2 × 2 #>   SA2_MAINCODE_2016 values #>   <chr>              <dbl> #> 1 107011545             10 #> 2 107041548             10 map_data_with_correspondence(   codes = c(107011130, 107041149),   values = c(10, 10),   from_area = \"sa2\",   from_year = 2011,   to_area = \"sa2\",   to_year = 2016,   value_type = \"aggs\" ) #> # A tibble: 5 × 2 #>   SA2_MAINCODE_2016 values #>   <chr>              <dbl> #> 1 107011545           4.82 #> 2 107011546           3.62 #> 3 107011547           1.57 #> 4 107041548           4.49 #> 5 107041549           5.51"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/read_hpa_spatial_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a dataset from <github.com/healthpolicyanalysis/hpa.spatial.data/> — read_hpa_spatial_data","title":"Read a dataset from <github.com/healthpolicyanalysis/hpa.spatial.data/> — read_hpa_spatial_data","text":"Read dataset <github.com/healthpolicyanalysis/hpa.spatial.data/>","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/read_hpa_spatial_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a dataset from <github.com/healthpolicyanalysis/hpa.spatial.data/> — read_hpa_spatial_data","text":"","code":"read_hpa_spatial_data(name, export_dir = tempdir())"},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/read_hpa_spatial_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a dataset from <github.com/healthpolicyanalysis/hpa.spatial.data/> — read_hpa_spatial_data","text":"name name dataset hpa.spatial.data repo. Valid names within get_data_file_list(). export_dir directory store downloaded data.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/read_hpa_spatial_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a dataset from <github.com/healthpolicyanalysis/hpa.spatial.data/> — read_hpa_spatial_data","text":"sf object.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/reference/read_hpa_spatial_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a dataset from <github.com/healthpolicyanalysis/hpa.spatial.data/> — read_hpa_spatial_data","text":"","code":"read_hpa_spatial_data(\"lhn\") #> Simple feature collection with 63 features and 3 fields #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: 112.9211 ymin: -43.74036 xmax: 159.1092 ymax: -9.142176 #> Geodetic CRS:  GDA2020 #> # A tibble: 63 × 4 #>    LHN_Name              state STATE_CODE                               geometry #>    <chr>                 <fct> <chr>                          <MULTIPOLYGON [°]> #>  1 Central Coast (NSW)   NSW   1          (((151.5725 -33.29127, 151.5723 -33.2… #>  2 Far West NSW          NSW   1          (((145.1595 -32.74717, 145.1484 -32.8… #>  3 Hunter New England    NSW   1          (((152.5489 -32.0719, 152.5488 -32.07… #>  4 Illawarra Shoalhaven  NSW   1          (((151.0662 -34.17233, 151.066 -34.17… #>  5 Mid North Coast (NSW) NSW   1          (((153.2615 -29.94011, 153.2613 -29.9… #>  6 Murrumbidgee          NSW   1          (((145.3385 -32.72168, 145.3378 -32.7… #>  7 Nepean Blue Mountains NSW   1          (((151.1358 -33.10996, 151.1357 -33.1… #>  8 Northern NSW          NSW   1          (((153.2602 -29.97412, 153.2605 -29.9… #>  9 Northern Sydney       NSW   1          (((151.343 -33.62451, 151.343 -33.624… #> 10 South Eastern Sydney  NSW   1          (((151.2658 -33.92539, 151.2659 -33.9… #> # ℹ 53 more rows"},{"path":[]},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/news/index.html","id":"hpaspatial-0212","dir":"Changelog","previous_headings":"","what":"hpa.spatial 0.2.12","title":"hpa.spatial 0.2.12","text":"data read {hpa.spatial.data} read specific commit ensure (now ) old versions hpa.spatial read data expected (time analyses). allow user specify custom correspondence table map_data_with_correspondence(). add access recently added Aged Care Planning Region shape files ({hpa.spatial.data}). GHA R CMD CHECK Windows. update README. update vignettes.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/news/index.html","id":"hpaspatial-0211","dir":"Changelog","previous_headings":"","what":"hpa.spatial 0.2.11","title":"hpa.spatial 0.2.11","text":"Ensure SA2s can completely map LHNs (including SA2s zero pop). Includes associated change {hpa.spatial.data} commit.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/news/index.html","id":"hpaspatial-0210","dir":"Changelog","previous_headings":"","what":"hpa.spatial 0.2.10","title":"hpa.spatial 0.2.10","text":"update create_child_geo() assign un-parented mesh blocks nearest polygon parent_geo. update testing snaps LHN polygon updated {hpa.spatial.data}. create vignettes.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/news/index.html","id":"hpaspatial-029","dir":"Changelog","previous_headings":"","what":"hpa.spatial 0.2.9","title":"hpa.spatial 0.2.9","text":"use open-source (MIT) license. bug fix: creating correspondence table complete match polygons meshblocks data within populations zero, allow match ratio = 1. bug fix: using map_data_with_correspondence, avoid bug converts Date grouping variables numeric (use cbind.data.frame, cbind). workflow: add github action workflows checking package (check-standard) making github pages website (pkgdown). bug fix: map_data_with_correspondence() get confused vector object used combination .data. Now vector attempted evaluated errors, accesses .data.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/news/index.html","id":"hpaspatial-028","dir":"Changelog","previous_headings":"","what":"hpa.spatial 0.2.8","title":"hpa.spatial 0.2.8","text":"allow user get Modified Monash Model data (SA1, 2016 ed.) using get_polygon(name = \"mmm19\") get_mmm19_poly(). bug fix: pass value_type appropriately groups used map_data_with_correspondence(). feature: let map_data_with_correspondence() take list vectors groups , .data passed, can take character vector column names vector symbols.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/news/index.html","id":"hpaspatial-027","dir":"Changelog","previous_headings":"","what":"hpa.spatial 0.2.7","title":"hpa.spatial 0.2.7","text":"allow map_data_with_correspondence() take from_geo to_geo rather areas years. (Also requires adding export_fname arg, consistent changes get_correspondence_tbl().) allow get_correspondence_tbl() take from_geo to_geo rather areas years get polygons via get_polygon(). Also allow user specify export_fname (file name) save correspondence table new tables can’t named make_fname().","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/news/index.html","id":"hpaspatial-026","dir":"Changelog","previous_headings":"","what":"hpa.spatial 0.2.6","title":"hpa.spatial 0.2.6","text":"make create_child_geo() adapts sf polygon (child_geo) object splitting polygons span across multiple polygons within another passed sf polygon object (parent_geo). Can used adapt, example, SA3s span across multiple LHN’s cross split. move datasets used hpa.spatial.data pkg access just int way {strayr} reads data {absmapsdata}. properly use export_dir get_polygon(). remove internal data rely data hpa.spatial.data.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/news/index.html","id":"hpaspatial-025","dir":"Changelog","previous_headings":"","what":"hpa.spatial 0.2.5","title":"hpa.spatial 0.2.5","text":"move PHN_CODE first col phn consistent pkg data.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/news/index.html","id":"hpaspatial-024","dir":"Changelog","previous_headings":"","what":"hpa.spatial 0.2.4","title":"hpa.spatial 0.2.4","text":"use tidy evaluation quosures avoid problems accessing objects passed hpa.spatial functions evaluate calls. save read correspondence tables save time particularly correspondence table ’s created created many times within map_data_with_correspondence() (say, groups used).","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/news/index.html","id":"hpaspatial-023","dir":"Changelog","previous_headings":"","what":"hpa.spatial 0.2.3","title":"hpa.spatial 0.2.3","text":"bug fix: call get_correspondence_tbl() parent environment map_data_with_correspondence().","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/news/index.html","id":"hpaspatial-022","dir":"Changelog","previous_headings":"","what":"hpa.spatial 0.2.2","title":"hpa.spatial 0.2.2","text":"default mb_geo map_data_with_correspondence() missing apply default within function code. Using hpa.spatial function default arg fails ’s called namespace (hpa.spatial::map_data_with_correspondence()).","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/news/index.html","id":"hpaspatial-021","dir":"Changelog","previous_headings":"","what":"hpa.spatial 0.2.1","title":"hpa.spatial 0.2.1","text":"add get_correspondence_tbl() calls strayr::read_correspondence_tbl() fails find one, uses make_correspondence_tbl() create one. Takes args strayr::read_correspondence_tbl() option use different mesh blocks edition/population data make_correspondence_tbl(). add make_correspondence_tbl() create correspondence table two given geographies POINT geometry (sf) population counts (Person standard mesh blocks data). added .data argument map_data_with_correspondence() codes, values groups can passed reference (like dplyr::mutate()). always return tibble map_data_with_correspondence() (just consistency). add tests (#3) non-issue.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/news/index.html","id":"hpaspatial-020","dir":"Changelog","previous_headings":"","what":"hpa.spatial 0.2.0","title":"hpa.spatial 0.2.0","text":"create lhn dataset replace independent state datasets (qld_hhs, nsw_lhd, sa_lhn etc…). bug fix (#2): use withr::with_package() withr::with_environment() evaluate calls get_polygon() hpa.spatial namespace within copy parent environment.","code":""},{"path":"https://healthpolicyanalysis.github.io/hpa.spatial/news/index.html","id":"hpaspatial-011","dir":"Changelog","previous_headings":"","what":"hpa.spatial 0.1.1","title":"hpa.spatial 0.1.1","text":"initial release two main functions: get_polygon() accesses polygons {absmapsdata} via strayr::read_absmap() well shape files internal pkg map_data_with_correspondence() allows user map data (unit aggregate values) across editions ASGS well within nested levels (.e. SA2 SA3).","code":""}]
